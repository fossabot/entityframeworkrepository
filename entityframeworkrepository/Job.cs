// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.51
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;

namespace entityframeworkrepository
{
    using entityframeworkrepository.core;
    using Newtonsoft.Json;
    using System.ComponentModel.DataAnnotations;

    // Job
    [Table("Job", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.27.0.0")]
    public partial class Job: BaseEntity
    {
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column(@"JobID", Order = 1, TypeName = "int")]
        [Index(@"PK_Job", 1, IsUnique = true, IsClustered = true)]
        [Required]
        [Key]
        [Display(Name = "Job ID")]
        public int JobId { get; set; } // JobID (Primary key)

        [Column(@"JobCode", Order = 2, TypeName = "varchar")]
        [MaxLength(20)]
        [StringLength(20)]
        [Display(Name = "Job code")]
        public string JobCode { get; set; } // JobCode (length: 20)

        [Column(@"JobTitle", Order = 3, TypeName = "varchar")]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Job title")]
        public string JobTitle { get; set; } // JobTitle (length: 50)

        [Column(@"JobDescription", Order = 4, TypeName = "varchar")]
        [MaxLength(200)]
        [StringLength(200)]
        [Display(Name = "Job description")]
        public string JobDescription { get; set; } // JobDescription (length: 200)

        [Column(@"JobDepartment", Order = 5, TypeName = "varchar")]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Job department")]
        public string JobDepartment { get; set; } // JobDepartment (length: 50)

        [Column(@"JobStatusID", Order = 6, TypeName = "int")]
        [Display(Name = "Job status ID")]
        public int? JobStatusId { get; set; } // JobStatusID

        [Column(@"CountryID", Order = 7, TypeName = "int")]
        [Display(Name = "Country ID")]
        public int? CountryId { get; set; } // CountryID

        [Column(@"City", Order = 8, TypeName = "varchar")]
        [MaxLength(20)]
        [StringLength(20)]
        [Display(Name = "City")]
        public string City { get; set; } // City (length: 20)

        [Column(@"IsRemoteJob", Order = 9, TypeName = "tinyint")]
        [Display(Name = "Is remote job")]
        public byte? IsRemoteJob { get; set; } // IsRemoteJob

        [Column(@"JobRequirement", Order = 10, TypeName = "varchar")]
        [MaxLength(200)]
        [StringLength(200)]
        [Display(Name = "Job requirement")]
        public string JobRequirement { get; set; } // JobRequirement (length: 200)

        [Column(@"JobBenefit", Order = 11, TypeName = "varchar")]
        [MaxLength(200)]
        [StringLength(200)]
        [Display(Name = "Job benefit")]
        public string JobBenefit { get; set; } // JobBenefit (length: 200)

        [Column(@"InHouseOrAgency", Order = 12, TypeName = "tinyint")]
        [Display(Name = "In house or agency")]
        public byte? InHouseOrAgency { get; set; } // InHouseOrAgency

        [Column(@"EmploymentTypeID", Order = 13, TypeName = "int")]
        [Display(Name = "Employment type ID")]
        public int? EmploymentTypeId { get; set; } // EmploymentTypeID

        [Column(@"ExperienceID", Order = 14, TypeName = "int")]
        [Display(Name = "Experience ID")]
        public int? ExperienceId { get; set; } // ExperienceID

        [Column(@"Education", Order = 15, TypeName = "int")]
        [Display(Name = "Education")]
        public int? Education { get; set; } // Education

        [Column(@"JobKeywords", Order = 16, TypeName = "varchar")]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Job keywords")]
        public string JobKeywords { get; set; } // JobKeywords (length: 50)

        [Column(@"SalaryFrom", Order = 17, TypeName = "int")]
        [Display(Name = "Salary from")]
        public int? SalaryFrom { get; set; } // SalaryFrom

        [Column(@"SalaryTo", Order = 18, TypeName = "int")]
        [Display(Name = "Salary to")]
        public int? SalaryTo { get; set; } // SalaryTo

        [Column(@"CurrencyID", Order = 19, TypeName = "int")]
        [Display(Name = "Currency ID")]
        public int? CurrencyId { get; set; } // CurrencyID

        [Column(@"PersonID", Order = 20, TypeName = "int")]
        [Display(Name = "Person ID")]
        public int? PersonId { get; set; } // PersonID

        [Column(@"IsDeleted", Order = 21, TypeName = "tinyint")]
        [Display(Name = "Is deleted")]
        public byte? IsDeleted { get; set; } // IsDeleted

        [Column(@"IsVisible", Order = 22, TypeName = "tinyint")]
        [Display(Name = "Is visible")]
        public byte? IsVisible { get; set; } // IsVisible

        [Column(@"UpdatedBy", Order = 23, TypeName = "int")]
        [Required]
        [Display(Name = "Updated by")]
        public int UpdatedBy { get; set; } // UpdatedBy

        [Column(@"CreatedBy", Order = 24, TypeName = "int")]
        [Required]
        [Display(Name = "Created by")]
        public int CreatedBy { get; set; } // CreatedBy

        [Column(@"DateAdded", Order = 25, TypeName = "datetime")]
        [Required]
        [Display(Name = "Date added")]
        public System.DateTime DateAdded { get; set; } // DateAdded

        [Column(@"DateUpdated", Order = 26, TypeName = "datetime")]
        [Required]
        [Display(Name = "Date updated")]
        public System.DateTime DateUpdated { get; set; } // DateUpdated

        // Reverse navigation
        [JsonIgnore]
        public virtual System.Collections.Generic.ICollection<JobForm> JobForms { get; set; } // JobForm.FK_JobForm_Job

        // Foreign keys
        [JsonIgnore]
        [ForeignKey("PersonId")] public virtual Person Person { get; set; } // FK_Job_Person

        public Job()
        {
            JobForms = new System.Collections.Generic.List<JobForm>();
            InitializePartial();
        }

        partial void InitializePartial();
    }

}
// </auto-generated>
