// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.5
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;

namespace entityframeworkrepository
{
    using entityframeworkrepository;
    using entityframeworkrepository.core.entity;
    using Newtonsoft.Json;
    using System.Collections.ObjectModel;
    using System.ComponentModel.DataAnnotations;

    // Dictionary
    [Table("Dictionary", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.27.0.0")]
    public partial class Dictionary: BaseEntity
    {
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column(@"DictionaryTypeID", Order = 1, TypeName = "int")]
        [Index(@"PK_Dictionary", 1, IsUnique = true, IsClustered = true)]
        [Required]
        [Key]
        [Display(Name = "Dictionary type ID")]
        public int DictionaryTypeId { get; set; } // DictionaryTypeID (Primary key)

        [Column(@"DictionaryType", Order = 2, TypeName = "varchar")]
        [Required]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Dictionary type")]
        public string DictionaryType { get; set; } // DictionaryType (length: 50)

        [Column(@"ID2", Order = 3, TypeName = "int")]
        [Display(Name = "Id 2")]
        public System.Nullable<int> Id2 { get; set; } // ID2

        [Column(@"ID3", Order = 4, TypeName = "int")]
        [Display(Name = "Id 3")]
        public System.Nullable<int> Id3 { get; set; } // ID3

        [Column(@"Description", Order = 5, TypeName = "varchar")]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Description")]
        public string Description { get; set; } // Description (length: 50)

        [Column(@"FullDescription", Order = 6, TypeName = "varchar")]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Full description")]
        public string FullDescription { get; set; } // FullDescription (length: 50)

        [Column(@"Code", Order = 7, TypeName = "int")]
        [Required]
        [Display(Name = "Code")]
        public int Code { get; set; } // Code

        [Column(@"Hierarchy", Order = 8, TypeName = "int")]
        [Display(Name = "Hierarchy")]
        public System.Nullable<int> Hierarchy { get; set; } // Hierarchy

        [Column(@"DepartmentID", Order = 9, TypeName = "int")]
        [Display(Name = "Department ID")]
        public System.Nullable<int> DepartmentId { get; set; } // DepartmentID

        [Column(@"CompanyID", Order = 10, TypeName = "int")]
        [Display(Name = "Company ID")]
        public System.Nullable<int> CompanyId { get; set; } // CompanyID

        [Column(@"IsDeleted", Order = 11, TypeName = "bit")]
        [Display(Name = "Is deleted")]
        public System.Nullable<bool> IsDeleted { get; set; } // IsDeleted

        [Column(@"UpdatedBy", Order = 12, TypeName = "int")]
        [Display(Name = "Updated by")]
        public System.Nullable<int> UpdatedBy { get; set; } // UpdatedBy

        [Column(@"CreatedBy", Order = 13, TypeName = "int")]
        [Display(Name = "Created by")]
        public System.Nullable<int> CreatedBy { get; set; } // CreatedBy

        [Column(@"DateAdded", Order = 14, TypeName = "datetime")]
        [Display(Name = "Date added")]
        public System.Nullable<System.DateTime> DateAdded { get; set; } // DateAdded

        [Column(@"DateUpdated", Order = 15, TypeName = "datetime")]
        [Display(Name = "Date updated")]
        public System.Nullable<System.DateTime> DateUpdated { get; set; } // DateUpdated

        // Reverse navigation
        [JsonIgnore]
        public virtual System.Collections.Generic.ICollection<Person> People { get; set; } // Person.FK_Person_Dictionary

        public Dictionary()
        {
            Id2 = 0;
            Id3 = 0;
            DepartmentId = 0;
            CompanyId = 0;
            People = new ObservableCollection<Person>();
            InitializePartial();
        }

        partial void InitializePartial();
    }

}
// </auto-generated>
