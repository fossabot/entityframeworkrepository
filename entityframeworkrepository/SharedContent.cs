// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.51
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;

namespace entityframeworkrepository
{
    using entityframeworkrepository.core;
    using Newtonsoft.Json;
    using System.ComponentModel.DataAnnotations;

    // SharedContent
    [Table("SharedContent", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.27.0.0")]
    public partial class SharedContent: BaseEntity
    {
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column(@"SharedContentID", Order = 1, TypeName = "int")]
        [Index(@"PK_SharedContent", 1, IsUnique = true, IsClustered = true)]
        [Required]
        [Key]
        [Display(Name = "Shared content ID")]
        public int SharedContentId { get; set; } // SharedContentID (Primary key)

        [Column(@"JobFormResultID", Order = 2, TypeName = "int")]
        [Display(Name = "Job form result ID")]
        public int? JobFormResultId { get; set; } // JobFormResultID

        [Column(@"ShareContentTypeID", Order = 3, TypeName = "int")]
        [Display(Name = "Share content type ID")]
        public int? ShareContentTypeId { get; set; } // ShareContentTypeID

        [Column(@"AllowComment", Order = 4, TypeName = "tinyint")]
        [Display(Name = "Allow comment")]
        public byte? AllowComment { get; set; } // AllowComment

        [Column(@"ShowTimeLineEvaluation", Order = 5, TypeName = "tinyint")]
        [Display(Name = "Show time line evaluation")]
        public byte? ShowTimeLineEvaluation { get; set; } // ShowTimeLineEvaluation

        [Column(@"ShareContentMessage", Order = 6, TypeName = "varchar")]
        [MaxLength(100)]
        [StringLength(100)]
        [Display(Name = "Share content message")]
        public string ShareContentMessage { get; set; } // ShareContentMessage (length: 100)

        [Column(@"ShareContentLink", Order = 7, TypeName = "varchar")]
        [MaxLength(200)]
        [StringLength(200)]
        [Display(Name = "Share content link")]
        public string ShareContentLink { get; set; } // ShareContentLink (length: 200)

        [Column(@"ShareContentWith", Order = 8, TypeName = "int")]
        [Display(Name = "Share content with")]
        public int? ShareContentWith { get; set; } // ShareContentWith

        [Column(@"UpdatedBy", Order = 9, TypeName = "int")]
        [Required]
        [Display(Name = "Updated by")]
        public int UpdatedBy { get; set; } // UpdatedBy

        [Column(@"CreatedBy", Order = 10, TypeName = "int")]
        [Required]
        [Display(Name = "Created by")]
        public int CreatedBy { get; set; } // CreatedBy

        [Column(@"DateAdded", Order = 11, TypeName = "datetime")]
        [Required]
        [Display(Name = "Date added")]
        public System.DateTime DateAdded { get; set; } // DateAdded

        [Column(@"DateUpdated", Order = 12, TypeName = "datetime")]
        [Required]
        [Display(Name = "Date updated")]
        public System.DateTime DateUpdated { get; set; } // DateUpdated

        [Column(@"ShareContentWithEmail", Order = 13, TypeName = "varchar")]
        [MaxLength(30)]
        [StringLength(30)]
        [Display(Name = "Share content with email")]
        public string ShareContentWithEmail { get; set; } // ShareContentWithEmail (length: 30)

        public SharedContent()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

}
// </auto-generated>
