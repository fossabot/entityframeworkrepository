// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.51
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using entityframeworkrepository.core.entity;

namespace entityframeworkrepository
{
    using entityframeworkrepository.core;
    using System.ComponentModel.DataAnnotations;

    // Person
    [Table("Person", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.27.0.0")]
    public partial class Person: BaseEntity
    {
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column(@"PersonID", Order = 1, TypeName = "int")]
        [Index(@"PK_Person", 1, IsUnique = true, IsClustered = true)]
        [Required]
        [Key]
        [Display(Name = "Person ID")]
        public int PersonId { get; set; } // PersonID (Primary key)

        [Column(@"Email", Order = 2, TypeName = "varchar")]
        [MaxLength(50)]
        [StringLength(50)]
        [EmailAddress]
        [Display(Name = "Email")]
        public string Email { get; set; } // Email (length: 50)

        [Column(@"FirstName", Order = 3, TypeName = "varchar")]
        [MaxLength(20)]
        [StringLength(20)]
        [Display(Name = "First name")]
        public string FirstName { get; set; } // FirstName (length: 20)

        [Column(@"LastName", Order = 4, TypeName = "varchar")]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Last name")]
        public string LastName { get; set; } // LastName (length: 50)

        [Column(@"Telephone", Order = 5, TypeName = "varchar")]
        [MaxLength(20)]
        [StringLength(20)]
        [Phone]
        [Display(Name = "Telephone")]
        public string Telephone { get; set; } // Telephone (length: 20)

        [Column(@"MobilePhone", Order = 6, TypeName = "varchar")]
        [MaxLength(20)]
        [StringLength(20)]
        [Display(Name = "Mobile phone")]
        public string MobilePhone { get; set; } // MobilePhone (length: 20)

        [Column(@"Headline", Order = 7, TypeName = "varchar")]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Headline")]
        public string Headline { get; set; } // Headline (length: 50)

        [Column(@"Password", Order = 8, TypeName = "varchar")]
        [MaxLength(20)]
        [StringLength(20)]
        [DataType(DataType.Password)]
        [Display(Name = "Password")]
        public string Password { get; set; } // Password (length: 20)

        [Column(@"IsLockedOut", Order = 9, TypeName = "int")]
        [Display(Name = "Is locked out")]
        public int? IsLockedOut { get; set; } // IsLockedOut

        [Column(@"IsReal", Order = 10, TypeName = "int")]
        [Display(Name = "Is real")]
        public int? IsReal { get; set; } // IsReal

        [Column(@"Picture", Order = 11, TypeName = "varchar")]
        [MaxLength(100)]
        [StringLength(100)]
        [Display(Name = "Picture")]
        public string Picture { get; set; } // Picture (length: 100)

        [Column(@"TimeZone", Order = 12, TypeName = "varchar")]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Time zone")]
        public string TimeZone { get; set; } // TimeZone (length: 50)

        [Column(@"Signature", Order = 13, TypeName = "varchar")]
        [MaxLength(100)]
        [StringLength(100)]
        [Display(Name = "Signature")]
        public string Signature { get; set; } // Signature (length: 100)

        [Column(@"Preference", Order = 14, TypeName = "varchar")]
        [MaxLength(100)]
        [StringLength(100)]
        [Display(Name = "Preference")]
        public string Preference { get; set; } // Preference (length: 100)

        [Column(@"DictionaryTypeID", Order = 15, TypeName = "int")]
        [Display(Name = "Dictionary type ID")]
        public int? DictionaryTypeId { get; set; } // DictionaryTypeID

        [Column(@"SignatureOnOff", Order = 16, TypeName = "int")]
        [Display(Name = "Signature on off")]
        public int? SignatureOnOff { get; set; } // SignatureOnOff

        [Column(@"CampaignSource", Order = 17, TypeName = "varchar")]
        [MaxLength(30)]
        [StringLength(30)]
        [Display(Name = "Campaign source")]
        public string CampaignSource { get; set; } // CampaignSource (length: 30)

        [Column(@"UpdatedBy", Order = 18, TypeName = "int")]
        [Display(Name = "Updated by")]
        public int? UpdatedBy { get; set; } // UpdatedBy

        [Column(@"CreatedBy", Order = 19, TypeName = "int")]
        [Display(Name = "Created by")]
        public int? CreatedBy { get; set; } // CreatedBy

        [Column(@"DateAdded", Order = 20, TypeName = "datetime")]
        [Display(Name = "Date added")]
        public System.DateTime? DateAdded { get; set; } // DateAdded

        [Column(@"DateUpdated", Order = 21, TypeName = "datetime")]
        [Display(Name = "Date updated")]
        public System.DateTime? DateUpdated { get; set; } // DateUpdated

        // Reverse navigation
        public virtual System.Collections.Generic.ICollection<Activity> Activities_CreatedBy { get; set; } // Activity.FK_Activity_Person
        public virtual System.Collections.Generic.ICollection<Activity> Activities_UpdatedBy { get; set; } // Activity.FK_Activity_Person1
        public virtual System.Collections.Generic.ICollection<Department> Departments { get; set; } // Many to many mapping
        public virtual System.Collections.Generic.ICollection<Job> Jobs { get; set; } // Job.FK_Job_Person
        public virtual System.Collections.Generic.ICollection<Template> Templates_CreatedBy { get; set; } // Template.FK_Template_Person
        public virtual System.Collections.Generic.ICollection<Template> Templates_UpdatedBy { get; set; } // Template.FK_Template_Person2

        // Foreign keys
        [ForeignKey("DictionaryTypeId")] public virtual Dictionary Dictionary { get; set; } // FK_Person_Dictionary

        public Person()
        {
            Activities_CreatedBy = new System.Collections.Generic.List<Activity>();
            Activities_UpdatedBy = new System.Collections.Generic.List<Activity>();
            Departments = new System.Collections.Generic.List<Department>();
            Jobs = new System.Collections.Generic.List<Job>();
            Templates_CreatedBy = new System.Collections.Generic.List<Template>();
            Templates_UpdatedBy = new System.Collections.Generic.List<Template>();
            InitializePartial();
        }

        partial void InitializePartial();
    }

}
// </auto-generated>
