// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.51
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using entityframeworkrepository.core.entity;

namespace entityframeworkrepository
{
    using entityframeworkrepository.core;
    using System.ComponentModel.DataAnnotations;

    // PricePackage
    [Table("PricePackage", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.27.0.0")]
    public partial class PricePackage: BaseEntity
    {
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column(@"PricePackageID", Order = 1, TypeName = "int")]
        [Index(@"PK_PricePackage", 1, IsUnique = true, IsClustered = true)]
        [Required]
        [Key]
        [Display(Name = "Price package ID")]
        public int PricePackageId { get; set; } // PricePackageID (Primary key)

        [Column(@"PricePackageName", Order = 2, TypeName = "varchar")]
        [Required]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Price package name")]
        public string PricePackageName { get; set; } // PricePackageName (length: 50)

        [Column(@"Price", Order = 3, TypeName = "money")]
        [Required]
        [Display(Name = "Price")]
        public decimal Price { get; set; } // Price

        [Column(@"ForDay", Order = 4, TypeName = "int")]
        [Required]
        [Display(Name = "For day")]
        public int ForDay { get; set; } // ForDay

        [Column(@"IsDelete", Order = 5, TypeName = "bit")]
        [Required]
        [Display(Name = "Is delete")]
        public bool IsDelete { get; set; } // IsDelete

        [Column(@"Description", Order = 6, TypeName = "varchar")]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Description")]
        public string Description { get; set; } // Description (length: 50)

        [Column(@"Description2", Order = 7, TypeName = "varchar")]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Description 2")]
        public string Description2 { get; set; } // Description2 (length: 50)

        [Column(@"Discount", Order = 8, TypeName = "money")]
        [Display(Name = "Discount")]
        public decimal? Discount { get; set; } // Discount

        [Column(@"UpdatedBy", Order = 9, TypeName = "int")]
        [Required]
        [Display(Name = "Updated by")]
        public int UpdatedBy { get; set; } // UpdatedBy

        [Column(@"CreatedBy", Order = 10, TypeName = "int")]
        [Required]
        [Display(Name = "Created by")]
        public int CreatedBy { get; set; } // CreatedBy

        [Column(@"DateAdded", Order = 11, TypeName = "datetime")]
        [Required]
        [Display(Name = "Date added")]
        public System.DateTime DateAdded { get; set; } // DateAdded

        [Column(@"DateUpdated", Order = 12, TypeName = "datetime")]
        [Required]
        [Display(Name = "Date updated")]
        public System.DateTime DateUpdated { get; set; } // DateUpdated

        public PricePackage()
        {
            IsDelete = false;
            InitializePartial();
        }

        partial void InitializePartial();
    }

}
// </auto-generated>
